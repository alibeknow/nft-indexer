version: '3.1'

networks:
  monitoring:
    driver: bridge

volumes:
  mongodb_data: {}
  prometheus_data: {}
  grafana_data: {}

services:
  nft-indexer-api:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: nft-indexer-api
    command: npm run api:docker
    restart: "always"
    ports:
      - "8090:8090"
    expose:
      - 8090
    networks:
      - monitoring
    depends_on:
      - mongodb
    env_file:
      - .env

  nft-events-reader:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: nft-events-reader
    command: npm run events-reader:docker
    restart: "no"
    ports:
      - "8082:8082"
    expose:
      - 8082
    networks:
      - monitoring
    depends_on:
      - prometheus
      - mongodb
    env_file:
      - .env

  nft-indexer:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: nft-indexer
    command: npm run indexer:docker
    restart: "no"
    ports:
      - "8080:8080"
    expose:
      - 8080
    networks:
      - monitoring
    depends_on:
      - prometheus
      - mongodb
    env_file:
      - .env

  nft-metadata-reader:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: nft-metadata-reader
    command: npm run metadata-reader:docker
    restart: "no"
    ports:
      - "8081:8081"
    expose:
      - 8081
    networks:
      - monitoring
    depends_on:
      - prometheus
      - mongodb
    env_file:
      - .env

  mongodb:
    image: mongo:3.6.0
    restart: always
    ports:
      - "27017:27017"
    expose:
      - 27017
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: supersecretpassword
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    expose:
      - 9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    expose:
      - 3000
    networks:
      - monitoring

